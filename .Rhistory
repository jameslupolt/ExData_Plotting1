system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
mean(DT$pwgtp15,by=DT$SEX)
system.time(rowMeans(DT)[DT$SEX==1])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(DT[,mean(pwgtp15),by=SEX]))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX]))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1]); system.time(rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15)); system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1]); system.time(rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15)); system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
DT[,mean(pwgtp15),by=SEX]
mean(DT$pwgtp15,by=DT$SEX)
tapply(DT$pwgtp15,DT$SEX,mean)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(DT[DT$SEX==1,]$pwgtp15)
rowMeans(DT)[DT$SEX==1]
rowMeans(DT)
colnames(rowMeans(DT))
colnames(DT)
colnames(rowMeans(DT))
class(DT)
DT <- data.table(read.csv("some.csv", quote = ""))
class(DT)
tables()
DT <- read.table("some.csv", header=T, sep=",")
class(DT)
head(DT)
?read.table
?data.table
DT <- data.table(A = rep(1:3, each=4), B = rep(1:4, each=3), C = rep(1:2, 6), key = "A,B")
class(DT)
DT <- read.table("some.csv", header=T, sep=",")
class(DT)
DT <- data.table(DT)
class(DT)
tables()
DT <- data.table(A = rep(1:3, each=4), B = rep(1:4, each=3), C = rep(1:2, 6), key = "A,B")
tables()
DT <- fread("some.csv")
DT
class(DT)
tables
head(DT)
?
?
''
?fread
DT <- fread("some.csv",sep=",")
head(DT)
tables()
system.time(rowMeans(DT)[DT$SEX==1]); system.time(rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15)); system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
DT <- fread("some.csv",sep=",",header=TRUE)
tables()
head(DT)
colnames(DT)
tables()
tables()
system.time(rowMeans(DT)[DT$SEX==1]); system.time(rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15)); system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
?rowMeans
?rowMeans
(DT)[DT$SEX==1]
DT[,c(2,3)]
(DT)[DT$SEX==1,SEX]
system.time(rowMeans(DT)[DT$SEX==1]); system.time(rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15)); system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
mean(DT[DT$SEX==1,$pwgtp15])
mean(DT[DT$SEX==1,pwgtp15])
system.time(rowMeans(DT)[DT$SEX==1]); system.time(rowMeans(DT)[DT$SEX==2])
system.time(mean(DT[DT$SEX==1,]$pwgtp15)); system.time(mean(DT[DT$SEX==2,]$pwgtp15))
DT[,mean(pwgtp15),by=SEX]
tapply(DT$pwgtp15,DT$SEX,mean)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15)); system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15)); system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15)); system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15)); system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15)); system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
cls
power <- read.table("/Users/jameslupolt/Downloads/household_power_consumption.txt", header= T,
stringsAsFactors = F, na.strings = "?", sep = ";")
power <- power[power$Date == "1/2/2007" | power$Date == "2/2/2007",]
power$DateTime <- strptime(paste(power$Date, power$Time), "%d/%m/%Y %H:%M")
#classes <- sapply(power, class)
power$Global_active_power = as.numeric(power$Global_active_power)
power$Global_reactive_power = as.numeric(power$Global_reactive_power)
power$Voltage = as.numeric(power$Voltage)
power$Global_intensity = as.numeric(power$Global_intensity)
power$Sub_metering_1 = as.numeric(power$Sub_metering_1)
power$Sub_metering_2 = as.numeric(power$Sub_metering_2)
power$Sub_metering_3 = as.numeric(power$Sub_metering_3)
power <- power[,c(10,3,4,5,6,7,8,9)]
plot(x <- power$DateTime, y <- power$Sub_metering_1, type="l", ylab = "Energy sub metering", xlab = "" )
par(new=T)
plot(x <- power$DateTime, y <- power$Sub_metering_2, col="red", type="l", ylab = "", xlab = "" )
plot(x <- power$DateTime, y <- power$Sub_metering_1, type="l", ylab = "Energy sub metering", xlab = "" )
plot(x <- power$DateTime, y <- power$Sub_metering_1, type="l", ylab = "Energy sub metering", xlab = "" )
par(new=F)
plot(x <- power$DateTime, y <- power$Sub_metering_1, type="l", ylab = "Energy sub metering", xlab = "" )
power$DateTime
class(power)
powerdata <- read.table("/Users/jameslupolt/Downloads/household_power_consumption.txt", header= T,
stringsAsFactors = F, na.strings = "?", sep = ";")
powerdata <- powerdata[powerdata$Date == "1/2/2007" | powerdata$Date == "2/2/2007",]
powerdata$DateTime <- strptime(paste(powerdata$Date, powerdata$Time), "%d/%m/%Y %H:%M")
#classes <- sapply(powerdata, class)
powerdata$Global_active_powerdata = as.numeric(powerdata$Global_active_powerdata)
powerdata$Global_reactive_powerdata = as.numeric(powerdata$Global_reactive_powerdata)
powerdata$Voltage = as.numeric(powerdata$Voltage)
powerdata$Global_intensity = as.numeric(powerdata$Global_intensity)
powerdata$Sub_metering_1 = as.numeric(powerdata$Sub_metering_1)
powerdata$Sub_metering_2 = as.numeric(powerdata$Sub_metering_2)
powerdata$Sub_metering_3 = as.numeric(powerdata$Sub_metering_3)
powerdata <- powerdata[,c(10,3,4,5,6,7,8,9)]
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", xlab = "" )
plot(x <- power$DateTime, y <- power$Sub_metering_2, col="red", type="l", ylab='', xlab ='', axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red", type="l", ylab='', xlab ='', axes=F)
summary(powerdata$Sub_metering_2)
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0,2.0), axes=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0,2.0), axes=F)
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", xlab = "" )
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', xlim=c(0.0,2.0), axes=F)
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", xlab = "" )
par(new=T)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', xlim=c(0.0,2.0), axes=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0,2.0), axes=F)
summary(powerdata$Sub_metering_1)
summary(powerdata$DateTime)
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
xlim=c("2007-02-01 00:00:00","2007-02-02 23:59:00"), xlab = "" )
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
+ type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
?legend
legend
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
?legend
legend(right, top)
legend("topright")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col("grey","red","blue"))
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col("grey","red","blue"))
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col("red","blue"))
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col("gray","red","blue"))
legend("top", "right", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col("gray","red","blue"))
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col("gray","red","blue"))
?lty
?legend
legend(2000,9.5, # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2.5,2.5),col=c("blue","red"))
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col = c("gray","red","blue"))
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col = c("gray","red","blue"))
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col = c("black","red","blue"))
?legend
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1),
col = c("black","red","blue"), cex = 0.5)
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1),
col = c("black","red","blue"), cex = 0.75)
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1),
col = c("black","red","blue"), cex = 0.75)
dev.copy(png, 'plot3.png')
dev.off()
getwd()
setwd('/Users/jameslupolt/ExData_Plotting1')
par(mfrow=c(2,2))
hist(powerdata$Global_active_powerdata, breaks=12, col="red", xlab = "Global Active powerdata (kilowatts)", main = "Global Active powerdata")
plot(x <- powerdata$DateTime, y <- powerdata$Global_active_powerdata, type="l", ylab = "Global Active powerdata (kilowatts)", xlab = "" )
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1),
col = c("black","red","blue"), cex = 0.75)
hist(powerdata$Global_active_powerdata, breaks=12, col="red", xlab = "Global Active powerdata (kilowatts)", main = "Global Active powerdata")
hist(powerdata$Global_active_powerdata, breaks=12, col="red", xlab = "Global Active powerdata (kilowatts)", main = "Global Active powerdata")
par(mfrow=c(2,2))
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Global_active_powerdata, type="l", ylab = "Global Active powerdata (kilowatts)", xlab = "" )
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1),
col = c("black","red","blue"), cex = 0.75)
powerdata <- read.table("/Users/jameslupolt/Downloads/household_power_consumption.txt", header= T,
stringsAsFactors = F, na.strings = "?", sep = ";")
powerdata <- powerdata[powerdata$Date == "1/2/2007" | powerdata$Date == "2/2/2007",]
powerdata$DateTime <- strptime(paste(powerdata$Date, powerdata$Time), "%d/%m/%Y %H:%M")
#classes <- sapply(powerdata, class)
powerdata$Global_active_powerdata = as.numeric(powerdata$Global_active_powerdata)
powerdata$Global_reactive_powerdata = as.numeric(powerdata$Global_reactive_powerdata)
powerdata$Voltage = as.numeric(powerdata$Voltage)
powerdata$Global_intensity = as.numeric(powerdata$Global_intensity)
powerdata$Sub_metering_1 = as.numeric(powerdata$Sub_metering_1)
powerdata$Sub_metering_2 = as.numeric(powerdata$Sub_metering_2)
powerdata$Sub_metering_3 = as.numeric(powerdata$Sub_metering_3)
powerdata <- powerdata[,c(10,3,4,5,6,7,8,9)]
hist(powerdata$Global_active_powerdata, breaks=12, col="red", xlab = "Global Active powerdata (kilowatts)", main = "Global Active powerdata")
hist(powerdata$Global_active_power, breaks=12, col="red", xlab = "Global Active power (kilowatts)", main = "Global Active power")
plot(x <- powerdata$DateTime, y <- powerdata$Voltage, type="l", ylab = "Global Active power (kilowatts)", xlab = "", title="Voltage" )
plot(x <- powerdata$DateTime, y <- powerdata$Voltage, type="l", ylab = "Global Active power (kilowatts)", xlab = "", title="Voltage" )
plot(x <- powerdata$DateTime, y <- powerdata$Voltage, type="l", ylab = "Global Active power (kilowatts)", xlab = "" )
dim(powerdata)
colnames(powerdata)
plot(x <- powerdata$DateTime, y <- powerdata$Voltage, type="l", ylab = "Global Active power (kilowatts)", xlab = "" )
plot(x <- powerdata$DateTime, y <- powerdata$Voltage, type="l", ylab = "Global Active power (kilowatts)", xlab = "" )
plot(x <- powerdata$DateTime, y <- powerdata$Voltage, type="l", ylab = "Voltage", xlab = "datetime" )
plot(x <- powerdata$DateTime, y <- powerdata$Global_reactive_power, type="l", ylab = "Global_reactive_power", xlab = "datetime" )
par(mfrow=c(2,2))
plot(x <- powerdata$DateTime, y <- powerdata$Global_active_power, type="l", ylab = "Global Active power", xlab = "" )
plot(x <- powerdata$DateTime, y <- powerdata$Voltage, type="l", ylab = "Voltage", xlab = "datetime" )
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1),
col = c("black","red","blue"), cex = 0.4)
plot(x <- powerdata$DateTime, y <- powerdata$Global_reactive_power, type="l", ylab = "Global_reactive_power", xlab = "datetime" )
?legend
par(mfrow=c(2,2))
plot(x <- powerdata$DateTime, y <- powerdata$Global_active_power, type="l", ylab = "Global Active power", xlab = "" )
plot(x <- powerdata$DateTime, y <- powerdata$Voltage, type="l", ylab = "Voltage", xlab = "datetime" )
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1),
col = c("black","red","blue"), cex = 0.4, ncol = 0.5)
par(mfrow=c(2,2))
plot(x <- powerdata$DateTime, y <- powerdata$Global_active_power, type="l", ylab = "Global Active power", xlab = "" )
plot(x <- powerdata$DateTime, y <- powerdata$Voltage, type="l", ylab = "Voltage", xlab = "datetime" )
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1),
col = c("black","red","blue"), cex = 0.4)
plot(x <- powerdata$DateTime, y <- powerdata$Global_reactive_power, type="l", ylab = "Global_reactive_power", xlab = "datetime" )
source('~/ExData_Plotting1/plot4.R')
# Data can be downloaded from https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
# IMPORTANT: Prior to running this script, set your working directory to the directory containing the unzipped power consumption data
# e.g. setwd('~/ExData_Plotting1')
# Data can be downloaded from https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
#Read data. Requires household_power_consumption.txt in current working directory.
# Discards data except for two dates and transforms the date and time columns to a single datetime column.
# Sorry for slow method; didn't have time to write a fast one.
powerdata <- read.table("/Users/jameslupolt/Downloads/household_power_consumption.txt", header= T,
stringsAsFactors = F, na.strings = "?", sep = ";")
powerdata <- powerdata[powerdata$Date == "1/2/2007" | powerdata$Date == "2/2/2007",]
powerdata$DateTime <- strptime(paste(powerdata$Date, powerdata$Time), "%d/%m/%Y %H:%M")
powerdata$Global_active_powerdata = as.numeric(powerdata$Global_active_powerdata)
powerdata$Global_reactive_powerdata = as.numeric(powerdata$Global_reactive_powerdata)
powerdata$Voltage = as.numeric(powerdata$Voltage)
powerdata$Global_intensity = as.numeric(powerdata$Global_intensity)
powerdata$Sub_metering_1 = as.numeric(powerdata$Sub_metering_1)
powerdata$Sub_metering_2 = as.numeric(powerdata$Sub_metering_2)
powerdata$Sub_metering_3 = as.numeric(powerdata$Sub_metering_3)
powerdata <- powerdata[,c(10,3,4,5,6,7,8,9)]
# Create plot 4
par(mfrow=c(2,2))
plot(x <- powerdata$DateTime, y <- powerdata$Global_active_power, type="l", ylab = "Global Active power", xlab = "" )
plot(x <- powerdata$DateTime, y <- powerdata$Voltage, type="l", ylab = "Voltage", xlab = "datetime" )
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1),
col = c("black","red","blue"), cex = 0.4)
plot(x <- powerdata$DateTime, y <- powerdata$Global_reactive_power, type="l", ylab = "Global_reactive_power", xlab = "datetime" )
dev.copy(png, 'plot4.png')
# IMPORTANT: Prior to running this script, set your working directory to the directory containing the unzipped power consumption data
# e.g. setwd('~/ExData_Plotting1')
# Data can be downloaded from https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
#Read data. Requires household_power_consumption.txt in current working directory.
# Discards data except for two dates and transforms the date and time columns to a single datetime column.
# Sorry for slow method; didn't have time to write a fast one.
powerdata <- read.table("/Users/jameslupolt/Downloads/household_power_consumption.txt", header= T,
stringsAsFactors = F, na.strings = "?", sep = ";")
powerdata <- powerdata[powerdata$Date == "1/2/2007" | powerdata$Date == "2/2/2007",]
powerdata$DateTime <- strptime(paste(powerdata$Date, powerdata$Time), "%d/%m/%Y %H:%M")
powerdata$Global_active_powerdata = as.numeric(powerdata$Global_active_powerdata)
powerdata$Global_reactive_powerdata = as.numeric(powerdata$Global_reactive_powerdata)
powerdata$Voltage = as.numeric(powerdata$Voltage)
powerdata$Global_intensity = as.numeric(powerdata$Global_intensity)
powerdata$Sub_metering_1 = as.numeric(powerdata$Sub_metering_1)
powerdata$Sub_metering_2 = as.numeric(powerdata$Sub_metering_2)
powerdata$Sub_metering_3 = as.numeric(powerdata$Sub_metering_3)
powerdata <- powerdata[,c(10,3,4,5,6,7,8,9)]
# Create plot 4
par(mfrow=c(2,2))
plot(x <- powerdata$DateTime, y <- powerdata$Global_active_power, type="l", ylab = "Global Active power", xlab = "" )
plot(x <- powerdata$DateTime, y <- powerdata$Voltage, type="l", ylab = "Voltage", xlab = "datetime" )
par(new=F)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_1, type="l", ylab = "Energy sub metering", ylim=c(0.0000,38.0000),
, xlab = "" )
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_2, col="red",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
par(new=T)
plot(x <- powerdata$DateTime, y <- powerdata$Sub_metering_3, col="blue",
type="l", ylab='', xlab ='', ylim=c(0.0000,38.0000), axes=F)
legend("topright", legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1),
col = c("black","red","blue"), cex = 0.4)
plot(x <- powerdata$DateTime, y <- powerdata$Global_reactive_power, type="l", ylab = "Global_reactive_power", xlab = "datetime" )
dev.copy(png, 'plot4.png')
dev.off()
source('~/ExData_Plotting1/plot4.R')
# IMPORTANT: Prior to running this script, set your working directory to the directory containing the unzipped power consumption data
# e.g. setwd('~/ExData_Plotting1')
# Data can be downloaded from https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
#Read data. Requires household_power_consumption.txt in current working directory.
# Discards data except for two dates and transforms the date and time columns to a single datetime column.
# Sorry for slow method; didn't have time to write a fast one.
powerdata <- read.table("/Users/jameslupolt/Downloads/household_power_consumption.txt", header= T,
stringsAsFactors = F, na.strings = "?", sep = ";")
powerdata <- powerdata[powerdata$Date == "1/2/2007" | powerdata$Date == "2/2/2007",]
powerdata$DateTime <- strptime(paste(powerdata$Date, powerdata$Time), "%d/%m/%Y %H:%M")
powerdata$Global_active_powerdata = as.numeric(powerdata$Global_active_powerdata)
powerdata$Global_reactive_powerdata = as.numeric(powerdata$Global_reactive_powerdata)
powerdata$Voltage = as.numeric(powerdata$Voltage)
powerdata$Global_intensity = as.numeric(powerdata$Global_intensity)
powerdata$Sub_metering_1 = as.numeric(powerdata$Sub_metering_1)
powerdata$Sub_metering_2 = as.numeric(powerdata$Sub_metering_2)
powerdata$Sub_metering_3 = as.numeric(powerdata$Sub_metering_3)
powerdata <- powerdata[,c(10,3,4,5,6,7,8,9)]
# Create plot 1
hist(powerdata$Global_active_power, breaks=12, col="red", xlab = "Global Active power (kilowatts)", main = "Global Active power")
dev.copy(png, 'plot1.png')
dev.off()
# IMPORTANT: Prior to running this script, set your working directory to the directory containing the unzipped power consumption data
# e.g. setwd('~/ExData_Plotting1')
# Data can be downloaded from https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
#Read data. Requires household_power_consumption.txt in current working directory.
# Discards data except for two dates and transforms the date and time columns to a single datetime column.
# Sorry for slow method; didn't have time to write a fast one.
powerdata <- read.table("/Users/jameslupolt/Downloads/household_power_consumption.txt", header= T,
stringsAsFactors = F, na.strings = "?", sep = ";")
powerdata <- powerdata[powerdata$Date == "1/2/2007" | powerdata$Date == "2/2/2007",]
powerdata$DateTime <- strptime(paste(powerdata$Date, powerdata$Time), "%d/%m/%Y %H:%M")
powerdata$Global_active_power = as.numeric(powerdata$Global_active_power)
powerdata$Global_reactive_power = as.numeric(powerdata$Global_reactive_power)
powerdata$Voltage = as.numeric(powerdata$Voltage)
powerdata$Global_intensity = as.numeric(powerdata$Global_intensity)
powerdata$Sub_metering_1 = as.numeric(powerdata$Sub_metering_1)
powerdata$Sub_metering_2 = as.numeric(powerdata$Sub_metering_2)
powerdata$Sub_metering_3 = as.numeric(powerdata$Sub_metering_3)
powerdata <- powerdata[,c(10,3,4,5,6,7,8,9)]
# Create plot 1
hist(powerdata$Global_active_power, breaks=12, col="red", xlab = "Global Active power (kilowatts)", main = "Global Active power")
dev.copy(png, 'plot1.png')
dev.off()
